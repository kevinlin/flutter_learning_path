// Mocks generated by Mockito 5.4.3 from annotations
// in flutter_learning_path/test/nice_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_learning_path/core/auth/auth_service.dart' as _i3;
import 'package:flutter_learning_path/core/storage/storage_service.dart' as _i4;
import 'package:flutter_learning_path/data/auth/auth_payload.dart' as _i7;
import 'package:flutter_learning_path/data/auth/auth_repository.dart' as _i6;
import 'package:flutter_learning_path/data/auth/auth_response.dart' as _i2;
import 'package:flutter_learning_path/data/auth/user_data_payload.dart' as _i8;
import 'package:flutter_learning_path/data/work_out/work_out_history_payload.dart'
    as _i12;
import 'package:flutter_learning_path/data/work_out/work_out_repository.dart'
    as _i10;
import 'package:flutter_learning_path/data/work_out/work_out_upcoming_payload.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResponse_0 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  @override
  bool isTokenValid(String? token) => (super.noSuchMethod(
        Invocation.method(
          #isTokenValid,
          [token],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i4.StorageService {
  @override
  _i5.Future<void> writeSecureData(_i4.StorageItem? newItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeSecureData,
          [newItem],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> readSecureData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readSecureData,
          [key],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> deleteSecureData(_i4.StorageItem? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSecureData,
          [item],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i6.AuthRepository {
  @override
  _i5.Future<_i2.AuthResponse> signUpUser(_i7.AuthPayload? authPayload) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpUser,
          [authPayload],
        ),
        returnValue: _i5.Future<_i2.AuthResponse>.value(_FakeAuthResponse_0(
          this,
          Invocation.method(
            #signUpUser,
            [authPayload],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.AuthResponse>.value(_FakeAuthResponse_0(
          this,
          Invocation.method(
            #signUpUser,
            [authPayload],
          ),
        )),
      ) as _i5.Future<_i2.AuthResponse>);

  @override
  _i5.Future<void> createUserDetails(
    _i8.UserDataPayload? userData,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserDetails,
          [
            userData,
            token,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> signIn(_i7.AuthPayload? authPayload) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [authPayload],
        ),
        returnValue: _i5.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #signIn,
            [authPayload],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #signIn,
            [authPayload],
          ),
        )),
      ) as _i5.Future<String>);
}

/// A class which mocks [WorkOutRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkOutRepository extends _i1.Mock implements _i10.WorkOutRepository {
  @override
  _i5.Future<List<_i11.WorkOutUpcomingPayload>> getWorkOutList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkOutList,
          [],
        ),
        returnValue: _i5.Future<List<_i11.WorkOutUpcomingPayload>>.value(
            <_i11.WorkOutUpcomingPayload>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i11.WorkOutUpcomingPayload>>.value(
                <_i11.WorkOutUpcomingPayload>[]),
      ) as _i5.Future<List<_i11.WorkOutUpcomingPayload>>);

  @override
  _i5.Future<void> submitWorkOut(_i12.WorkOutHistoryPayload? history) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitWorkOut,
          [history],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
